// <auto-generated />
using ASP.NET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP.NET.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP.NET.Models.City", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countrycode");

                    b.Property<string>("district");

                    b.Property<string>("name");

                    b.Property<long>("population");

                    b.HasKey("id");

                    b.HasIndex("countrycode")
                        .IsUnique()
                        .HasFilter("[countrycode] IS NOT NULL");

                    b.ToTable("city");
                });

            modelBuilder.Entity("ASP.NET.Models.Country", b =>
                {
                    b.Property<string>("code")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("capital");

                    b.Property<string>("code2");

                    b.Property<string>("continent");

                    b.Property<long>("gnp");

                    b.Property<long>("gnpold");

                    b.Property<string>("governmentform");

                    b.Property<string>("headofstate");

                    b.Property<int>("indepyear");

                    b.Property<double>("lifeexpectancy");

                    b.Property<string>("localname");

                    b.Property<string>("name");

                    b.Property<long>("population");

                    b.Property<string>("region");

                    b.Property<long>("surfacearea");

                    b.HasKey("code");

                    b.ToTable("country");
                });

            modelBuilder.Entity("ASP.NET.Models.City", b =>
                {
                    b.HasOne("ASP.NET.Models.Country", "Country")
                        .WithOne("City")
                        .HasForeignKey("ASP.NET.Models.City", "countrycode");
                });
#pragma warning restore 612, 618
        }
    }
}
